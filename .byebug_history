continue
save_screenshot
page.html
continue
save_screenshot
continue
context
continue
titleize 'foo'
params
self.class
continue
self.class.superclass.superclass
self.class.superclass
self.class
continue
@view_context.respond_to? :params
@view_context.respond_to? :view_context
@view_context.params
@view_context
self.get_instance_variable(:view_context)
self.instance_variables
self
@view_context.send(:params)
@view_context
self.params
params
self.class.superclass.superclass.superclass
self.class.superclass.superclass
self.class.superclass
params
self.class
self
params
defined? params
continue
self
continue
page.html
all(:link_or_button, 'See Success')
find(:link_or_button, 'See Success')
click_on 'See Success'
page.html
continue
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_1")')
sleep 1
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_items")')
sleep 1
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_items")')
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_1")')
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_1")')
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_1")')
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_items")')
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_0")')
save_screenshot
continue
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_items")')
sleep 2
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_items")')
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_0")')
page.html
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_items")')
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_0")')
save_screenshot
continue
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_0")')
Components::LegacyViews::Pages::Async.collection
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_items")')
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_0")')
save_screenshot
continue
collection
continue
collection
continue
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_item_0")')
Components::LegacyViews::Pages::Async.collection
continue
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_time")')
sleep 2
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_time")')
save_screenshot
page.execute_script('MatestackUiCore.matestackEventHub.$emit("update_time")')
save_screenshot
continue
save_screenshot
page.html
page.execute_script('MatestackUiCore.matestackEventHub.$emit("foobar")')
save_screenshot
page.html
page.execute_script('MatestackUiCore.matestackEventHub.$emit("foobar")')
page.html
continue
page.execute_script('MatestackUiCore.matestackEventHub.$emit("some_event")')
before_content
save_screenshot
continue
expect(page).to have_xpath('//div[@id="div-on-page"]/div[@id="my-component" and contains(.,"foo from page")]')
page.html
continue
expect(page).to have_xpath('//div[@class="matestack_app"]/main/div[@class="matestack_page_content"]/div/div[@id="my-div-on-page-1"]')
expect(page).to have_xpath('//div[@class="matestack_app"]/main/div[@class="matestack_page_content"]')
page.html
save_screenshot
expect(page).to have_xpath('//div[@class="matestack_app"]/main/div[@class="matestack_page_content"]/div/div[@id="my-div-on-page-1"]/h2[contains(.,"This is Page 1")]')
continue
page.html
save_screenshot
continue
save_screenshot
continue
self.is_a?(ApplicationController) && params&.dig(:component_key)
self.is_a? ApplicationController && params&.dig(:component_key)
self.is_a? ApplicationController
self
continue
save_screenshot
continue
save_screenshot
continue
save_screenshot
continue
context.nil? && params&.dig(:component_key)
context.nil?
continue
save_screenshot
continue
self.methods.include? :params
self.methods
self.class.attrributes
self.class.atrributes
self.class.methods.include? :params
self.class.methods
self.class
context[:params]
context
self.class
self
continue
args
continue
args
continue
args
continue
args
params
respond_to? :params
self
self.params
self
params
@params
self
params
continue
save_screenshot
continue
save_screenshot
continue
self
self.class.superclass.optional_properties
self.class.superclass
self.superclass
self.class.class
self.class
self.parent_class
self.parent
self
continue
self
continue
self
continue
self
continue
self
continue
self
continue
self
continue
self
continue
page.html
continue
save_screenshot
continue
save_screenshot
continue
path
::Rails.application.routes.url_helpers.send(property_path, params)
property_path.is_a? Symbol
property_path
continue
save_screenshot
continue
save_screenshot
continue
page.html
continue
save_screenshot
page.html
continue
save_screenshot
page.html
continue
page.html
continue
save_screenshot
continue
save_screenshot
continue
save_screenshot
continue
prop.flatten
prop
continue
prop
continue
prop.flatten
prop.flatten!
prop.flatten
prop.keys.first
prop.keys
prop
prop.flatten
prop
prop.key
prop.values.first[:alias]
prop.values.first[:alias
prop.values.first
prop.values
prop.first
prop[:alias]
prop.is_a? Hash
self.class.requires_properties
continue
self.class.requires_properties
